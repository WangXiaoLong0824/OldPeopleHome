<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jk.dao.OutMapper" >
  <resultMap id="BaseResultMap" type="com.jk.entity.Out" >
    <id column="out_id" property="outId" jdbcType="INTEGER" />
    <result column="gotime" property="gotime" jdbcType="VARCHAR" />
    <result column="cometime" property="cometime" jdbcType="VARCHAR" />
    <result column="out_details" property="outDetails" jdbcType="VARCHAR" />
    <result column="out_name" property="outName" jdbcType="VARCHAR" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    out_id, gotime, cometime, out_details, out_name, user_name
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_out
    where out_id = #{outId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_out
    where out_id = #{outId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.jk.entity.Out" >
    insert into t_out (out_id, gotime, cometime, 
      out_details, out_name, user_name
      )
    values (#{outId,jdbcType=INTEGER}, #{gotime,jdbcType=VARCHAR}, #{cometime,jdbcType=VARCHAR}, 
      #{outDetails,jdbcType=VARCHAR}, #{outName,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.jk.entity.Out" >
    insert into t_out
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="outId != null" >
        out_id,
      </if>
      <if test="gotime != null" >
        gotime,
      </if>
      <if test="cometime != null" >
        cometime,
      </if>
      <if test="outDetails != null" >
        out_details,
      </if>
      <if test="outName != null" >
        out_name,
      </if>
      <if test="userName != null" >
        user_name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="outId != null" >
        #{outId,jdbcType=INTEGER},
      </if>
      <if test="gotime != null" >
        #{gotime,jdbcType=VARCHAR},
      </if>
      <if test="cometime != null" >
        #{cometime,jdbcType=VARCHAR},
      </if>
      <if test="outDetails != null" >
        #{outDetails,jdbcType=VARCHAR},
      </if>
      <if test="outName != null" >
        #{outName,jdbcType=VARCHAR},
      </if>
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.jk.entity.Out" >
    update t_out
    <set >
      <if test="gotime != null" >
        gotime = #{gotime,jdbcType=VARCHAR},
      </if>
      <if test="cometime != null" >
        cometime = #{cometime,jdbcType=VARCHAR},
      </if>
      <if test="outDetails != null" >
        out_details = #{outDetails,jdbcType=VARCHAR},
      </if>
      <if test="outName != null" >
        out_name = #{outName,jdbcType=VARCHAR},
      </if>
      <if test="userName != null" >
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
    </set>
    where out_id = #{outId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jk.entity.Out" >
    update t_out
    set gotime = #{gotime,jdbcType=VARCHAR},
      cometime = #{cometime,jdbcType=VARCHAR},
      out_details = #{outDetails,jdbcType=VARCHAR},
      out_name = #{outName,jdbcType=VARCHAR},
      user_name = #{userName,jdbcType=VARCHAR}
    where out_id = #{outId,jdbcType=INTEGER}
  </update>

    <!--统计总条数-->
    <select id="count" resultType="java.lang.Long">
      select count(*) from t_out
      <include refid="souOut"></include>
    </select>

    <!--查询所有数据-->
    <select id="findOut" resultMap="BaseResultMap">
      <bind name="key_info" value="(currPage-1)*pageSize"/>
      select * from t_out
      <include refid="souOut"></include>
      limit #{key_info},#{pageSize}
    </select>

<!--名字模糊查询-->
    <sql id="souOut">
    <where>
      <if test="out.outName!=null and out.outName!=''">
        and out_name like '%${out.outName}%'
      </if>
    </where>
  </sql>
</mapper>