<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jk.dao.ThingMapper" >
  <resultMap id="BaseResultMap" type="com.jk.entity.Thing" >
    <id column="thing_id" property="thingId" jdbcType="INTEGER" />
    <result column="thing_because" property="thingBecause" jdbcType="VARCHAR" />
    <result column="thing_time" property="thingTime" jdbcType="VARCHAR" />
    <result column="thing_cometime" property="thingCometime" jdbcType="VARCHAR" />
    <result column="emp_id" property="empId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    thing_id, thing_because, thing_time, thing_cometime, emp_id
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select a.*,b.emp_name cname from t_thing a left join t_emp b on a.emp_id=b.emp_id
    where a.thing_id = #{ids}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_thing
    where thing_id = #{thingId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.jk.entity.Thing" >
    insert into t_thing (thing_id, thing_because, thing_time, 
      thing_cometime, emp_id
      )
    values (#{thingId,jdbcType=INTEGER}, #{thingBecause,jdbcType=VARCHAR}, #{thingTime,jdbcType=VARCHAR}, 
      #{thingCometime,jdbcType=VARCHAR}, #{empId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.jk.entity.Thing" >
    insert into t_thing
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="thingId != null" >
        thing_id,
      </if>
      <if test="thingBecause != null" >
        thing_because,
      </if>
      <if test="thingTime != null" >
        thing_time,
      </if>
      <if test="thingCometime != null" >
        thing_cometime,
      </if>
      <if test="empId != null" >
        emp_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="thingId != null" >
        #{thingId,jdbcType=INTEGER},
      </if>
      <if test="thingBecause != null" >
        #{thingBecause,jdbcType=VARCHAR},
      </if>
      <if test="thingTime != null" >
        #{thingTime,jdbcType=VARCHAR},
      </if>
      <if test="thingCometime != null" >
        #{thingCometime,jdbcType=VARCHAR},
      </if>
      <if test="empId != null" >
        #{empId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.jk.entity.Thing" >
    update t_thing
    <set >
      <if test="thingBecause != null" >
        thing_because = #{thingBecause,jdbcType=VARCHAR},
      </if>
      <if test="thingTime != null" >
        thing_time = #{thingTime,jdbcType=VARCHAR},
      </if>
      <if test="thingCometime != null" >
        thing_cometime = #{thingCometime,jdbcType=VARCHAR},
      </if>
      <if test="empId != null" >
        emp_id = #{empId,jdbcType=INTEGER},
      </if>
    </set>
    where thing_id = #{thingId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jk.entity.Thing" >
    update t_thing
    set thing_because = #{thingBecause,jdbcType=VARCHAR},
      thing_time = #{thingTime,jdbcType=VARCHAR},
      thing_cometime = #{thingCometime,jdbcType=VARCHAR},
      emp_id = #{empId,jdbcType=INTEGER},
    where thing_id = #{thingId,jdbcType=INTEGER}
  </update>

    <!--统计总条数-->
    <select id="count" resultType="java.lang.Long">
      select count(*) from t_thing a left join t_emp b on a.emp_id=b.emp_id
      <include refid="souThing"></include>
    </select>

    <!--查询所有数据-->
    <select id="findThing" resultMap="BaseResultMap">
      <bind name="key_info" value="(currPage-1)*pageSize"/>
      select a.*,b.emp_name cname from t_thing a left join t_emp b on a.emp_id=b.emp_id
      <include refid="souThing"></include>
      limit #{key_info},#{pageSize}
    </select>

  <!--名字模糊查询-->
  <sql id="souThing">
    <where>
      <if test="thing.cname!=null and thing.cname!=''">
        and b.emp_name like '%${thing.cname}%'
      </if>
    </where>
  </sql>
</mapper>